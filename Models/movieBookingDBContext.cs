// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace MovieTicketingApplication.Models;

public partial class movieBookingDBContext : DbContext
{
    public movieBookingDBContext(DbContextOptions<movieBookingDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Booking> Bookings { get; set; }

    public virtual DbSet<Movie> Movies { get; set; }

    public virtual DbSet<Review> Reviews { get; set; }

    public virtual DbSet<Screen> Screens { get; set; }

    public virtual DbSet<Show> Shows { get; set; }

    public virtual DbSet<Theatre> Theatres { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Booking>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Booking__3213E83FAC0E630C");

            entity.ToTable("Booking");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.BookingDateTime)
                .HasColumnType("datetime")
                .HasColumnName("bookingDateTime");
            entity.Property(e => e.Price)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("price");
            entity.Property(e => e.Seats).HasColumnName("seats");
            entity.Property(e => e.ShowId).HasColumnName("showId");
            entity.Property(e => e.UserId).HasColumnName("userId");

            entity.HasOne(d => d.Show).WithMany(p => p.Bookings)
                .HasForeignKey(d => d.ShowId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Booking__showId__5FB337D6");

            entity.HasOne(d => d.User).WithMany(p => p.Bookings)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Booking__userId__5EBF139D");
        });

        modelBuilder.Entity<Movie>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Movie__3213E83F4A3D7FF0");

            entity.ToTable("Movie");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Description)
                .IsRequired()
                .HasColumnType("text")
                .HasColumnName("description");
            entity.Property(e => e.Duration).HasColumnName("duration");
            entity.Property(e => e.Genre)
                .HasMaxLength(100)
                .HasColumnName("genre");
            entity.Property(e => e.Lang)
                .HasMaxLength(50)
                .HasColumnName("lang");
            entity.Property(e => e.Poster)
                .HasMaxLength(255)
                .HasColumnName("poster");
            entity.Property(e => e.Rating)
                .HasColumnType("decimal(2, 1)")
                .HasColumnName("rating");
            entity.Property(e => e.Title)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("title");
        });

        modelBuilder.Entity<Review>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Review__3213E83F2313C569");

            entity.ToTable("Review");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Comment)
                .HasColumnType("text")
                .HasColumnName("comment");
            entity.Property(e => e.MovieId).HasColumnName("movieId");
            entity.Property(e => e.Rating)
                .HasColumnType("decimal(2, 1)")
                .HasColumnName("rating");
            entity.Property(e => e.ReviewDate)
                .HasColumnType("datetime")
                .HasColumnName("reviewDate");
            entity.Property(e => e.UserId).HasColumnName("userId");

            entity.HasOne(d => d.Movie).WithMany(p => p.Reviews)
                .HasForeignKey(d => d.MovieId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Review__movieId__628FA481");

            entity.HasOne(d => d.User).WithMany(p => p.Reviews)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Review__userId__6383C8BA");
        });

        modelBuilder.Entity<Screen>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Screen__3213E83F25079119");

            entity.ToTable("Screen");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.MovieId).HasColumnName("movieId");
            entity.Property(e => e.ScreenNumber).HasColumnName("screenNumber");
            entity.Property(e => e.TheatreId).HasColumnName("theatreId");
            entity.Property(e => e.TicketFare)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("ticketFare");

            entity.HasOne(d => d.Movie).WithMany(p => p.Screens)
                .HasForeignKey(d => d.MovieId)
                .HasConstraintName("FK__Screen__movieId__5812160E");

            entity.HasOne(d => d.Theatre).WithMany(p => p.Screens)
                .HasForeignKey(d => d.TheatreId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Screen__theatreI__571DF1D5");
        });

        modelBuilder.Entity<Show>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Show__3213E83F7DAFCDDD");

            entity.ToTable("Show");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AvailableSeats).HasColumnName("availableSeats");
            entity.Property(e => e.ScreenId).HasColumnName("screenId");
            entity.Property(e => e.ShowTime)
                .HasColumnType("datetime")
                .HasColumnName("showTime");
            

            entity.HasOne(d => d.Screen).WithMany(p => p.Shows)
                .HasForeignKey(d => d.ScreenId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Show__screenId__5BE2A6F2");
        });

        modelBuilder.Entity<Theatre>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Theatre__3213E83F9251B10E");

            entity.ToTable("Theatre");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Capacity).HasColumnName("capacity");
            entity.Property(e => e.Location)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("location");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("name");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__User__3213E83F52A7D67C");

            entity.ToTable("User");

            entity.HasIndex(e => e.Email, "UQ__User__AB6E6164130B9F73").IsUnique();

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("email");
            entity.Property(e => e.Fname)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("fname");
            entity.Property(e => e.Lname)
                .IsRequired()
                .HasMaxLength(100)
                .HasColumnName("lname");
            entity.Property(e => e.PasswordHashed)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("passwordHashed");
            entity.Property(e => e.Role)
                .HasMaxLength(50)
                .HasColumnName("role");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}